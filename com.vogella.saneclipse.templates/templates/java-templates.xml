<?xml version="1.0" encoding="UTF-8"?>
<templates>
  <template name="localvariable" description="Local Variable"
    id="org.eclipse.jdt.ui.templates.localvariable" context="java-statements"
    enabled="true" autoinsert="false">
    ${variabletype} ${myvar:newName(var)}= new ${variabletype}(${cursor});
  </template>
  
  <template name="string" description="String (empty)"
    id="org.eclipse.jdt.ui.templates.emptystring" context="java-statements"
    enabled="true" autoinsert="false">
    String ${myvar:newName(var)}= "";
  </template>


  <template name="ifnotnull" description="If not null"
    id="org.eclipse.jdt.ui.templates.notnull" context="java-statements"
    enabled="true" autoinsert="false">
    if (${myvar:newName(variable)}!=null) {
      ${cursor}
    }
  </template>

  <template name="array-string-with-test-data" description="Creates an String array with test data"
    id="org.eclipse.jdt.ui.templates.arrayexample" context="java-statements"
    enabled="true" autoinsert="false">
    String[] ${myvar:newName(values)} =
    new String[]{"Windows 7", "MacOS", "Debian", "Ubuntu", "Redhat",
    "Android", "iPhone", "Suse", "Windows XP", "Windows Mobile", "OS/2", "WebOS"};
  </template>
  
   <template name="list" description="Creates an List"
    id="org.eclipse.jdt.ui.templates.list" context="java-statements"
    enabled="true" autoinsert="false">
    ${imp:import(java.util.List, java.util.ArrayList)}List&lt;Object&gt; ${myvar:newName(var)} = new ArrayList&lt;&gt;();
  </template>
  
  <template name="method-public" 
    description="Creates public method" 
    id="org.eclipse.jdt.ui.templates.methodpublic" 
    context="java-members" enabled="true" 
    autoinsert="false">public void ${name}(${}) {
      ${cursor}
}
  </template>
  
  <template name="finallyCloseStream"
    description="Creates the finally block for closing a stream" 
    id="org.eclipse.jdt.ui.templates.finallyclosestream"
    context="java-statements" enabled="true" autoinsert="false">
    finally {
    if (stream != null)
    try {
    stream.close();
    } catch (IOException e) {
    e.printStackTrace();
    }
    }
  </template>
  
  <!-- ToDo add JFace template file and only offer JFace templates, if JFace is in the classpath -->
  <template name="tableViewer"
    description="Creates a default JFace TableViewer" 
    id="org.eclipse.jdt.ui.templates.jfacetableviewer"
    context="java-statements" enabled="true" autoinsert="false">

		TableViewer tableViewer = new TableViewer(parent);

		Table table = tableViewer.getTable();
		table.setHeaderVisible(true);
		table.setLinesVisible(true);

		tableViewer.setContentProvider(ArrayContentProvider.getInstance());
		tableViewer
				.addSelectionChangedListener(new ISelectionChangedListener() {

					@Override
					public void selectionChanged(SelectionChangedEvent event) {
						ISelection selection = event.getSelection();
						if (selection instanceof IStructuredSelection) {
							selectionService.setSelection(((IStructuredSelection)selection).toList());
						}
					}
				});
		TableViewerColumn viewerColumn = new TableViewerColumn(tableViewer,
				SWT.NONE);
		viewerColumn.getColumn().setWidth(200);
		viewerColumn.getColumn().setText("Name");

		viewerColumn.setLabelProvider(new ColumnLabelProvider());

		IObservableList input = new WritableList();
		ViewerSupport.bind(
				tableViewer,
				input,
				PojoProperties.values(new String[] { "name" }));
  </template>

</templates> 